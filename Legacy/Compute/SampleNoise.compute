#pragma kernel SampleNoise
#include "Packages/jp.keijiro.noiseshader/Shader/ClassicNoise3D.hlsl"

RWTexture3D<float> Result;
int3 Offset;

float OctavePerlinNoise(float3 p, int octaves, float persistence, float lacunarity) {
    float total = 0.0;
    float frequency = 1.0;
    float amplitude = 1.0;
    float maxValue = 0.0;
    for (int i = 0; i < octaves; i++) {
        total += ClassicNoise(p * frequency) * amplitude;
        maxValue += amplitude;

        amplitude *= persistence;
        frequency *= lacunarity;
    }
    return total / maxValue;
}

[numthreads(8,8,8)]
void SampleNoise (uint3 id : SV_DispatchThreadID) {
    // Result[id] = ClassicNoise((id+Offset) / 8.0f);
    Result[id] = OctavePerlinNoise((id+Offset) / 8.0f, 4, 0.5, 2.0);
}
